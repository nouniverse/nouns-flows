/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/FsqdnXXGSBl
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

"use client"

import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table"
import Image from "next/image"
import { useMemo, useState } from "react"

export function GrantsList() {
  const [search, setSearch] = useState("")
  const grants = useMemo(
    () =>
      [
        {
          image: "/placeholder.svg",
          title: "Nouns Ecosystem Development",
          description:
            "Funding for building tools and infrastructure for the Nouns ecosystem",
          amount: 50000,
          votes: 125,
          recipients: [
            { avatar: "", name: "John Doe" },
            { avatar: "", name: "Jane Smith" },
            { avatar: "", name: "Bob Johnson" },
          ],
          category: "Ecosystem",
        },
        {
          image: "/placeholder.svg",
          title: "Nouns Art Gallery Curation",
          description:
            "Funding for curating and managing the Nouns Art Gallery",
          amount: 25000,
          votes: 80,
          recipients: [
            { avatar: "", name: "Emily Davis" },
            { avatar: "", name: "Michael Wilson" },
          ],
          category: "Art",
        },
        {
          image: "/placeholder.svg",
          title: "Nouns Contributor Rewards",
          description: "Rewards for active contributors to the Nouns DAO",
          amount: 75000,
          votes: 200,
          recipients: [
            { avatar: "", name: "Sarah Thompson" },
            { avatar: "", name: "David Lee" },
            { avatar: "", name: "Olivia Nguyen" },
          ],
          category: "Community",
        },
        {
          image: "/placeholder.svg",
          title: "Nouns Hackathon Sponsorship",
          description: "Sponsorship for a Nouns-themed hackathon event",
          amount: 30000,
          votes: 50,
          recipients: [
            { avatar: "", name: "Alex Patel" },
            { avatar: "", name: "Sophia Ramirez" },
          ],
          category: "Events",
        },
        {
          image: "/placeholder.svg",
          title: "Nouns Community Grants",
          description: "Funding for community-led Nouns-related projects",
          amount: 100000,
          votes: 175,
          recipients: [
            { avatar: "", name: "Isabella Gomez" },
            { avatar: "", name: "Ethan Flores" },
            { avatar: "", name: "Ava Hernandez" },
          ],
          category: "Community",
        },
        {
          image: "/placeholder.svg",
          title: "Nouns DAO Operational Expenses",
          description: "Funding for the day-to-day operations of the Nouns DAO",
          amount: 80000,
          votes: 120,
          recipients: [
            { avatar: "", name: "Lucas Diaz" },
            { avatar: "", name: "Mia Reyes" },
          ],
          category: "Operations",
        },
      ].filter((grant) => {
        const searchValue = search.toLowerCase()
        return (
          grant.title.toLowerCase().includes(searchValue) ||
          grant.description.toLowerCase().includes(searchValue) ||
          grant.category.toLowerCase().includes(searchValue)
        )
      }),
    [search],
  )
  return (
    <Card>
      <CardHeader>
        <CardTitle>Vote for Grants</CardTitle>
        <CardDescription>
          View and manage the grants awarded by the Nouns DAO community.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="mb-4 flex items-center justify-between">
          <Input
            type="search"
            placeholder="Search grants..."
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            className="w-full max-w-md"
          />
        </div>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Image</TableHead>
              <TableHead>Title</TableHead>
              <TableHead>Amount</TableHead>
              <TableHead className="text-right">Votes</TableHead>
              <TableHead>Recipients</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {grants.map((grant, index) => (
              <TableRow key={index}>
                <TableCell>
                  <Image
                    src="/placeholder.svg"
                    alt={grant.title}
                    width={64}
                    height={64}
                    className="rounded-md"
                    style={{ aspectRatio: "64/64", objectFit: "cover" }}
                  />
                </TableCell>
                <TableCell>
                  <div className="font-medium">{grant.title}</div>
                  <p className="text-muted-foreground">{grant.description}</p>
                </TableCell>
                <TableCell>${grant.amount.toLocaleString("en-EN")}</TableCell>
                <TableCell className="text-right">{grant.votes}</TableCell>
                <TableCell>
                  <div className="flex items-center gap-2">
                    {grant.recipients.map((recipient, index) => (
                      <Avatar key={index} className="size-7">
                        <AvatarImage
                          src={recipient.avatar}
                          alt={recipient.name}
                        />
                        <AvatarFallback>
                          {recipient.name.charAt(0).toUpperCase()}
                        </AvatarFallback>
                      </Avatar>
                    ))}
                  </div>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  )
}
