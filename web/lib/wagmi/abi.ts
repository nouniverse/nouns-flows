export const NounsFlowAbi = [
  { inputs: [], stateMutability: "payable", type: "constructor" },
  { inputs: [], name: "ADDRESS_ZERO", type: "error" },
  { inputs: [], name: "ALLOCATION_MUST_BE_POSITIVE", type: "error" },
  { inputs: [], name: "ARRAY_LENGTH_MISMATCH", type: "error" },
  { inputs: [], name: "FLOW_RATE_NEGATIVE", type: "error" },
  { inputs: [], name: "FLOW_RATE_TOO_HIGH", type: "error" },
  { inputs: [], name: "INVALID_BPS", type: "error" },
  { inputs: [], name: "INVALID_BPS_SUM", type: "error" },
  { inputs: [], name: "INVALID_ERC20_VOTING_WEIGHT", type: "error" },
  { inputs: [], name: "INVALID_ERC721_VOTING_WEIGHT", type: "error" },
  { inputs: [], name: "INVALID_METADATA", type: "error" },
  { inputs: [], name: "INVALID_PERCENTAGE", type: "error" },
  { inputs: [], name: "INVALID_RATE_PERCENT", type: "error" },
  { inputs: [], name: "INVALID_RECIPIENT_ID", type: "error" },
  { inputs: [], name: "INVALID_SIGNATURE", type: "error" },
  { inputs: [], name: "INVALID_VOTE_WEIGHT", type: "error" },
  { inputs: [], name: "NOT_ABLE_TO_VOTE_WITH_TOKEN", type: "error" },
  { inputs: [], name: "NOT_APPROVED_RECIPIENT", type: "error" },
  { inputs: [], name: "NOT_MANAGER", type: "error" },
  { inputs: [], name: "NOT_OWNER_OR_MANAGER", type: "error" },
  { inputs: [], name: "NOT_OWNER_OR_PARENT", type: "error" },
  { inputs: [], name: "OVERFLOW", type: "error" },
  { inputs: [], name: "PAST_PROOF", type: "error" },
  { inputs: [], name: "POOL_CONNECTION_FAILED", type: "error" },
  {
    inputs: [
      { internalType: "uint256", name: "recipientsLength", type: "uint256" },
      { internalType: "uint256", name: "allocationsLength", type: "uint256" },
    ],
    name: "RECIPIENTS_ALLOCATIONS_MISMATCH",
    type: "error",
  },
  { inputs: [], name: "RECIPIENT_ALREADY_EXISTS", type: "error" },
  { inputs: [], name: "RECIPIENT_ALREADY_REMOVED", type: "error" },
  { inputs: [], name: "SENDER_NOT_MANAGER", type: "error" },
  { inputs: [], name: "SIGNATURE_EXPIRED", type: "error" },
  { inputs: [], name: "TOO_FEW_RECIPIENTS", type: "error" },
  { inputs: [], name: "UNITS_UPDATE_FAILED", type: "error" },
  { inputs: [], name: "WEIGHT_TOO_LOW", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "oldBaselineFlowRatePercent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newBaselineFlowRatePercent",
        type: "uint32",
      },
    ],
    name: "BaselineFlowRatePercentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flowImpl",
        type: "address",
      },
    ],
    name: "FlowImplementationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "superToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "flowImpl",
        type: "address",
      },
    ],
    name: "FlowInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int96",
        name: "oldTotalFlowRate",
        type: "int96",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "newTotalFlowRate",
        type: "int96",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "baselinePoolFlowRate",
        type: "int96",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "bonusPoolFlowRate",
        type: "int96",
      },
    ],
    name: "FlowRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recipientId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "FlowRecipientCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint8", name: "version", type: "uint8" },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "ManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recipientId",
        type: "uint256",
      },
      {
        components: [
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "bool", name: "removed", type: "bool" },
          {
            internalType: "enum FlowStorageV1.RecipientType",
            name: "recipientType",
            type: "uint8",
          },
          {
            components: [
              { internalType: "string", name: "title", type: "string" },
              { internalType: "string", name: "description", type: "string" },
              { internalType: "string", name: "image", type: "string" },
              { internalType: "string", name: "tagline", type: "string" },
              { internalType: "string", name: "url", type: "string" },
            ],
            internalType: "struct FlowStorageV1.RecipientMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct FlowStorageV1.FlowRecipient",
        name: "recipient",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approvedBy",
        type: "address",
      },
    ],
    name: "RecipientCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "recipientId",
        type: "uint256",
      },
    ],
    name: "RecipientRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recipientId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberUnits",
        type: "uint256",
      },
      { indexed: false, internalType: "uint256", name: "bps", type: "uint256" },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUnits",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "BASELINE_MEMBER_UNITS",
    outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_superToken", type: "address" },
      { internalType: "address", name: "_flowImpl", type: "address" },
      { internalType: "address", name: "_manager", type: "address" },
      { internalType: "address", name: "_parent", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "tokenVoteWeight", type: "uint256" },
          {
            internalType: "uint32",
            name: "baselinePoolFlowRatePercent",
            type: "uint32",
          },
        ],
        internalType: "struct IFlow.FlowParams",
        name: "_flowParams",
        type: "tuple",
      },
      {
        components: [
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "image", type: "string" },
          { internalType: "string", name: "tagline", type: "string" },
          { internalType: "string", name: "url", type: "string" },
        ],
        internalType: "struct FlowStorageV1.RecipientMetadata",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "__Flow_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activeRecipientCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "image", type: "string" },
          { internalType: "string", name: "tagline", type: "string" },
          { internalType: "string", name: "url", type: "string" },
        ],
        internalType: "struct FlowStorageV1.RecipientMetadata",
        name: "metadata",
        type: "tuple",
      },
      { internalType: "address", name: "flowManager", type: "address" },
    ],
    name: "addFlowRecipient",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "recipient", type: "address" },
      {
        components: [
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "image", type: "string" },
          { internalType: "string", name: "tagline", type: "string" },
          { internalType: "string", name: "url", type: "string" },
        ],
        internalType: "struct FlowStorageV1.RecipientMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "addRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baselinePool",
    outputs: [
      { internalType: "contract ISuperfluidPool", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baselinePoolFlowRatePercent",
    outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusPool",
    outputs: [
      { internalType: "contract ISuperfluidPool", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "owners", type: "address[]" },
      { internalType: "uint256[][]", name: "tokenIds", type: "uint256[][]" },
      { internalType: "uint256[]", name: "recipientIds", type: "uint256[]" },
      {
        internalType: "uint32[]",
        name: "percentAllocations",
        type: "uint32[]",
      },
      {
        components: [
          { internalType: "bytes32", name: "beaconRoot", type: "bytes32" },
          {
            internalType: "uint256",
            name: "beaconOracleTimestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "executionStateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "stateRootProof",
            type: "bytes32[]",
          },
          { internalType: "bytes[]", name: "accountProof", type: "bytes[]" },
        ],
        internalType: "struct IStateProof.BaseParameters",
        name: "baseProofParams",
        type: "tuple",
      },
      {
        internalType: "bytes[][][]",
        name: "ownershipStorageProofs",
        type: "bytes[][][]",
      },
      {
        internalType: "bytes[][]",
        name: "delegateStorageProofs",
        type: "bytes[][]",
      },
    ],
    name: "castVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidPool",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "connectPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flowImpl",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "memberAddr", type: "address" }],
    name: "getMemberTotalFlowRate",
    outputs: [{ internalType: "int96", name: "flowRate", type: "int96" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalFlowRate",
    outputs: [{ internalType: "int96", name: "totalFlowRate", type: "int96" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "memberAddr", type: "address" }],
    name: "getTotalMemberUnits",
    outputs: [{ internalType: "uint256", name: "totalUnits", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "memberAddr", type: "address" }],
    name: "getTotalReceivedByMember",
    outputs: [
      { internalType: "uint256", name: "totalAmountReceived", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getVotesForTokenId",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "recipientId", type: "uint256" },
          { internalType: "uint32", name: "bps", type: "uint32" },
          { internalType: "uint128", name: "memberUnits", type: "uint128" },
        ],
        internalType: "struct FlowStorageV1.VoteAllocation[]",
        name: "allocations",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256[]", name: "tokenIds", type: "uint256[]" },
    ],
    name: "getVotesForTokenIds",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "recipientId", type: "uint256" },
          { internalType: "uint32", name: "bps", type: "uint32" },
          { internalType: "uint128", name: "memberUnits", type: "uint128" },
        ],
        internalType: "struct FlowStorageV1.VoteAllocation[][]",
        name: "allocations",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_verifier", type: "address" },
      { internalType: "address", name: "_superToken", type: "address" },
      { internalType: "address", name: "_flowImpl", type: "address" },
      { internalType: "address", name: "_manager", type: "address" },
      { internalType: "address", name: "_parent", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "tokenVoteWeight", type: "uint256" },
          {
            internalType: "uint32",
            name: "baselinePoolFlowRatePercent",
            type: "uint32",
          },
        ],
        internalType: "struct IFlow.FlowParams",
        name: "_flowParams",
        type: "tuple",
      },
      {
        components: [
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "image", type: "string" },
          { internalType: "string", name: "tagline", type: "string" },
          { internalType: "string", name: "url", type: "string" },
        ],
        internalType: "struct FlowStorageV1.RecipientMetadata",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      { internalType: "string", name: "title", type: "string" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "string", name: "image", type: "string" },
      { internalType: "string", name: "tagline", type: "string" },
      { internalType: "string", name: "url", type: "string" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parent",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolConfig",
    outputs: [
      {
        internalType: "bool",
        name: "transferabilityForUnitsOwner",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "distributionFromAnyAddress",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipientCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "recipientExists",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "recipients",
    outputs: [
      { internalType: "address", name: "recipient", type: "address" },
      { internalType: "bool", name: "removed", type: "bool" },
      {
        internalType: "enum FlowStorageV1.RecipientType",
        name: "recipientType",
        type: "uint8",
      },
      {
        components: [
          { internalType: "string", name: "title", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "image", type: "string" },
          { internalType: "string", name: "tagline", type: "string" },
          { internalType: "string", name: "url", type: "string" },
        ],
        internalType: "struct FlowStorageV1.RecipientMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "recipientId", type: "uint256" }],
    name: "removeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_baselineFlowRatePercent",
        type: "uint32",
      },
    ],
    name: "setBaselineFlowRatePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_flowImpl", type: "address" }],
    name: "setFlowImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "int96", name: "_flowRate", type: "int96" }],
    name: "setFlowRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_newManager", type: "address" }],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "superToken",
    outputs: [
      { internalType: "contract ISuperToken", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "tokenIdToRecipientMemberUnits",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenVoteWeight",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      { internalType: "contract ITokenVerifier", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "votes",
    outputs: [
      { internalType: "uint256", name: "recipientId", type: "uint256" },
      { internalType: "uint32", name: "bps", type: "uint32" },
      { internalType: "uint128", name: "memberUnits", type: "uint128" },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const

export const NounsTokenAbi = [
  {
    inputs: [
      { internalType: "address", name: "_noundersDAO", type: "address" },
      { internalType: "address", name: "_minter", type: "address" },
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "_descriptor",
        type: "address",
      },
      {
        internalType: "contract INounsSeeder",
        name: "_seeder",
        type: "address",
      },
      {
        internalType: "contract IProxyRegistry",
        name: "_proxyRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  { anonymous: false, inputs: [], name: "DescriptorLocked", type: "event" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsDescriptorMinimal",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "DescriptorUpdated",
    type: "event",
  },
  { anonymous: false, inputs: [], name: "MinterLocked", type: "event" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "MinterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NounBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          { internalType: "uint48", name: "background", type: "uint48" },
          { internalType: "uint48", name: "body", type: "uint48" },
          { internalType: "uint48", name: "accessory", type: "uint48" },
          { internalType: "uint48", name: "head", type: "uint48" },
          { internalType: "uint48", name: "glasses", type: "uint48" },
        ],
        indexed: false,
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "NounCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "noundersDAO",
        type: "address",
      },
    ],
    name: "NoundersDAOUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  { anonymous: false, inputs: [], name: "SeederLocked", type: "event" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract INounsSeeder",
        name: "seeder",
        type: "address",
      },
    ],
    name: "SeederUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "nounId", type: "uint256" }],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint32", name: "", type: "uint32" },
    ],
    name: "checkpoints",
    outputs: [
      { internalType: "uint32", name: "fromBlock", type: "uint32" },
      { internalType: "uint96", name: "votes", type: "uint96" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "dataURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "delegatee", type: "address" }],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "delegatee", type: "address" },
      { internalType: "uint256", name: "nonce", type: "uint256" },
      { internalType: "uint256", name: "expiry", type: "uint256" },
      { internalType: "uint8", name: "v", type: "uint8" },
      { internalType: "bytes32", name: "r", type: "bytes32" },
      { internalType: "bytes32", name: "s", type: "bytes32" },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "delegator", type: "address" }],
    name: "delegates",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "descriptor",
    outputs: [
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "getCurrentVotes",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "blockNumber", type: "uint256" },
    ],
    name: "getPriorVotes",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDescriptorLocked",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMinterLocked",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSeederLocked",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "nonces",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noundersDAO",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "numCheckpoints",
    outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRegistry",
    outputs: [
      { internalType: "contract IProxyRegistry", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "_data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seeder",
    outputs: [
      { internalType: "contract INounsSeeder", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "seeds",
    outputs: [
      { internalType: "uint48", name: "background", type: "uint48" },
      { internalType: "uint48", name: "body", type: "uint48" },
      { internalType: "uint48", name: "accessory", type: "uint48" },
      { internalType: "uint48", name: "head", type: "uint48" },
      { internalType: "uint48", name: "glasses", type: "uint48" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "newContractURIHash", type: "string" },
    ],
    name: "setContractURIHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsDescriptorMinimal",
        name: "_descriptor",
        type: "address",
      },
    ],
    name: "setDescriptor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_minter", type: "address" }],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_noundersDAO", type: "address" },
    ],
    name: "setNoundersDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INounsSeeder",
        name: "_seeder",
        type: "address",
      },
    ],
    name: "setSeeder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "index", type: "uint256" }],
    name: "tokenByIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "uint256", name: "index", type: "uint256" },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "delegator", type: "address" }],
    name: "votesToDelegate",
    outputs: [{ internalType: "uint96", name: "", type: "uint96" }],
    stateMutability: "view",
    type: "function",
  },
] as const
